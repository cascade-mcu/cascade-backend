type File {
  contentType: String!
  createdAt: DateTime!
  id: ID! @unique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
}

type User {
  createdAt: DateTime!
  id: ID! @unique
  updatedAt: DateTime!
  firstName: String
  lastName: String
  email: String @unique
  password: String
  devices: [Device!]! @relation(name: "UserDevices")
  locations: [Location!]! @relation(name: "UserLocations")
  defaultLocation: Location @relation(name: "UserDefaultLocation")
}

type Device {
  createdAt: DateTime!
  id: ID! @unique
  updatedAt: DateTime!
  place: Place @relation(name: "PlaceDevices")
  sensors: [Sensor!]! @relation(name: "DeviceSensors")
  workers: [Worker!]! @relation(name: "DeviceWorkers")
  groups: [Group!]! @relation(name: "DeviceGroups")
  user: User @relation(name: "UserDevices")
  name: String
  token: String
  deviceModel: DeviceModel @relation(name: "DeviceModelDevices")
  logEveryInSeconds: Int! @default(value: 30)
  uploadEveryInSeconds: Int! @default(value: 35)
}

type DeviceModel {
  createdAt: DateTime!
  name: String
  id: ID! @unique
  updatedAt: DateTime!
  devices: [Device!]! @relation(name: "DeviceModelDevices")
  sensorTypes: [SensorType!]! @relation(name: "DeviceModelSensorTypes")
  available: Boolean! @default(value: true)
}

type SensorType {
  createdAt: DateTime!
  name: String
  id: ID! @unique
  updatedAt: DateTime!
  sensors: [Sensor!]! @relation(name: "SensorSensorType")
  deviceModels: [DeviceModel!]! @relation(name: "DeviceModelSensorTypes")
}

type Preset {
  createdAt: DateTime!
  id: ID! @unique
  updatedAt: DateTime!
}

type Group {
  createdAt: DateTime!
  name: String
  devices: [Device!]! @relation(name: "DeviceGroups")
  id: ID! @unique
  updatedAt: DateTime!
}

type Sensor {
  createdAt: DateTime!
  device: Device @relation(name: "DeviceSensors")
  logs: [Log!]! @relation(name: "SensorLogs")
  id: ID! @unique
  updatedAt: DateTime!
  sensorType: SensorType @relation(name: "SensorSensorType")
}

type Worker {
  createdAt: DateTime!
  name: String
  device: Device @relation(name: "DeviceWorkers")
  id: ID! @unique
  updatedAt: DateTime!
}

type Log {
  readingTime: DateTime
  createdAt: DateTime!
  sensor: Sensor @relation(name: "SensorLogs")
  id: ID! @unique
  updatedAt: DateTime!
  value: Float!
}

type Scene {
  name: String
  id: ID! @unique
  location: Location @relation(name: "LocationScenes")
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Place {
  name: String
  id: ID! @unique
  location: Location @relation(name: "LocationPlaces")
  locationDefault: Location @relation(name: "LocationDefaultPlace")
  devices: [Device!]! @relation(name: "PlaceDevices")
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Location {
  name: String
  id: ID! @unique
  places: [Place!]! @relation(name: "LocationPlaces")
  defaultPlace: Place @relation(name: "LocationDefaultPlace")
  updatedAt: DateTime!
  createdAt: DateTime!
  user: User @relation(name: "UserLocations")
  userDefault: User @relation(name: "UserDefaultLocation")
  scenes: [Scene!]! @relation(name: "LocationScenes")
}
